import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as p,o as t,c as o,b as s,d as a,e as l,w as c,a as i}from"./app-YLoTUNVh.js";const r={},d=s("p",null,"MySQL 中主要的数据库对象包括数据库、基本表、视图、索引、触发器和存储过程等",-1),u=s("li",null,"本处只介绍数据库、基本表和视图的创建及维护",-1),k=i('<div class="hint-container tip"><p class="hint-container-title">关于格式的说明:</p><ol><li>命令中 中括号 <code>[]</code> 的内容为可选项，其余是必选项</li><li>命令中 大括号 <code>{}</code> 或用 分隔符<code> |</code>中的内容为必选项，即必选其中的一项</li><li><code>IF NOT EXISTS</code> 为可选项，如果出现新建的数据库名已经存在的情况，带上这个选项则不执行任何操作，如果没有带这个选项系统会报错</li><li><code>DEFAULT CHARACTER SET</code> 和 <code>DEFAULT COLLATE</code> 为可选项，作用是指定默认的字符集和校对规则</li></ol></div><h2 id="一、数据库的定义及维护" tabindex="-1"><a class="header-anchor" href="#一、数据库的定义及维护" aria-hidden="true">#</a> 一、数据库的定义及维护</h2><h3 id="_1-1-创建数据库" tabindex="-1"><a class="header-anchor" href="#_1-1-创建数据库" aria-hidden="true">#</a> 1.1 创建数据库</h3><p>创建数据库使用的命令是 <code>CREATE DATABASE</code> ，语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> {<span class="token keyword">DATABASE</span><span class="token operator">|</span><span class="token keyword">SCHEMA</span>} <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>数据库名<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token operator">&lt;</span>字符集<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> <span class="token keyword">COLLATE</span> <span class="token operator">&lt;</span>校对规则<span class="token operator">&gt;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">例 5-1</p><p>创建一个名为 <strong>学生课程</strong> 的数据库，字符集是 <code>gb2312</code> ，校对规则是 <code>gb2312_chinese_ci</code> 。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>学生课程<span class="token punctuation">`</span></span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token identifier"><span class="token punctuation">`</span>gb2312<span class="token punctuation">`</span></span> <span class="token keyword">DEFAULT</span> <span class="token keyword">COLLATE</span> <span class="token identifier"><span class="token punctuation">`</span>gb2312_chinese_ci<span class="token punctuation">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><img src="https://jz-cbq-1311841992.cos.ap-beijing.myqcloud.com/images/image-20231204225613112.png" alt="image-20231204225613112" style="zoom:67%;"><p>此时 <strong>学生课程</strong> 数据库已经成功创建，这时如果执行如下所示的 <strong>SQL</strong> 语句，由于语句中没有带 <code>IF NOT EXISTS</code>选项，系统会报错</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token identifier"><span class="token punctuation">`</span>学生课程<span class="token punctuation">`</span></span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token identifier"><span class="token punctuation">`</span>gb2312<span class="token punctuation">`</span></span> <span class="token keyword">DEFAULT</span> <span class="token keyword">COLLATE</span> <span class="token identifier"><span class="token punctuation">`</span>gb2312_chinese_ci<span class="token punctuation">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://jz-cbq-1311841992.cos.ap-beijing.myqcloud.com/images/image-20231204225707592.png" alt="image-20231204225707592" style="zoom:67%;"><h3 id="_1-2-修改数据库" tabindex="-1"><a class="header-anchor" href="#_1-2-修改数据库" aria-hidden="true">#</a> 1.2 修改数据库</h3><p>修改数据库使用的命令是 <code>ALTER DATABASE</code> ，语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> {<span class="token keyword">DATABASE</span><span class="token operator">|</span><span class="token keyword">SCHEMA</span>} <span class="token operator">&lt;</span>数据库名<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token operator">&lt;</span>字符集<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">DEFAULT</span> <span class="token keyword">COLLATE</span> <span class="token operator">&lt;</span>校对规则<span class="token operator">&gt;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">例 5-2</p><p>将 <code>[例 5-1 ]</code>中创建的 <strong>学生课程</strong> 数据库，字符集修改为 <code>utf-8</code> ，校对规则是 <code>utf8_general_ci</code> 。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> <span class="token identifier"><span class="token punctuation">`</span>学生课程<span class="token punctuation">`</span></span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> <span class="token identifier"><span class="token punctuation">`</span>utf8mb4<span class="token punctuation">`</span></span> <span class="token keyword">DEFAULT</span> <span class="token keyword">COLLATE</span> <span class="token identifier"><span class="token punctuation">`</span>utf8mb4_general_ci<span class="token punctuation">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><img src="https://jz-cbq-1311841992.cos.ap-beijing.myqcloud.com/images/image-20231204230201498.png" alt="image-20231204230201498" style="zoom:67%;"><h3 id="_1-3-删除数据库" tabindex="-1"><a class="header-anchor" href="#_1-3-删除数据库" aria-hidden="true">#</a> 1.3 删除数据库</h3><p>删除数据库使用的命令是 <code>DROP DATABASE</code> ，语法格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> {<span class="token keyword">DATABASE</span><span class="token operator">|</span><span class="token keyword">SCHEMA</span>} <span class="token operator">&lt;</span>数据库名<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">例 5-3</p><p>将 <code>[例 5-1 ]</code>中创建的 <strong>学生课程</strong> 数据库删除</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token identifier"><span class="token punctuation">`</span>学生课程<span class="token punctuation">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><img src="https://jz-cbq-1311841992.cos.ap-beijing.myqcloud.com/images/image-20231204230530621.png" alt="image-20231204230530621" style="zoom:67%;"><div class="hint-container danger"><p class="hint-container-title">警告</p><p>数据库的删除操作是不可逆的，数据库中全部数据都会丢失，原来分配的空间也会被收回</p></div><h2 id="二、基本表的定义及维护" tabindex="-1"><a class="header-anchor" href="#二、基本表的定义及维护" aria-hidden="true">#</a> 二、基本表的定义及维护</h2><p>MySQ L 中基本表是最重要的对象，基本表的定义及维护功能可以使用基本表的 创建、修改和删除 3 种语句实现。</p><h3 id="_2-1-创建基本表" tabindex="-1"><a class="header-anchor" href="#_2-1-创建基本表" aria-hidden="true">#</a> 2.1 创建基本表</h3><p>创建基本表使用 <code>CREATE TABLE</code> 语句，该语句的基本格式如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>库名<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token punctuation">(</span>\n	<span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>列级完整性约束条件<span class="token operator">&gt;</span><span class="token punctuation">]</span>\n    <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>列名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>列级完整性约束条件<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> ···n<span class="token punctuation">]</span>\n    <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>表级完整性约束条件<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> ···n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列级完整性约束条件" tabindex="-1"><a class="header-anchor" href="#列级完整性约束条件" aria-hidden="true">#</a> 列级完整性约束条件</h3><p>列级完整性约束是针对字段值设置的限制条件或说明，主要有以下几种</p><ul><li><p><code>not null</code> 和 <code>null</code></p><ul><li><code>not null</code> ：非空约束(不允许字段值为空)</li><li><code>null</code> ：可空约束 (允许字段值为空) <strong>不清楚、不确定或无意义</strong> 的字段可以使用 <strong>null 约束</strong>，允许不输人该字段的值</li></ul></li><li><p><code>unique </code>：唯一性约束，要求该字段的值不能有重复</p></li><li><p><code>default</code> ：缺省值约束，将字段中使用频率最高的字段值设置为该列的缺省值，这样可以减少数据输人的工作量</p></li></ul><h3 id="表级完整性约束条件" tabindex="-1"><a class="header-anchor" href="#表级完整性约束条件" aria-hidden="true">#</a> 表级完整性约束条件</h3><ul><li><p><code>unique</code>：唯一性约束约束要求某些字段的组合值不能有重复时。可以在这些字段上定义 <code>unique</code> 约束</p></li><li><p><code>primary key</code>： 主键约束，实现关系的实体完整性。</p></li><li><p>若主键中只包含一个字段，则 <strong>primary key 约束</strong> 可以放在字段类型定义之后</p></li><li><p>若主键包含两个以上的字段，则需要按语法单独列出</p></li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token punctuation">[</span> <span class="token keyword">constraint</span> <span class="token identifier"><span class="token punctuation">`</span>约束名<span class="token punctuation">`</span></span><span class="token punctuation">]</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>字段 <span class="token number">1</span> ，字段 <span class="token number">2</span> <span class="token operator">&gt;</span><span class="token punctuation">[</span>，···<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果需要自己定义约束的名称，则使用 <code>constraint 约束名</code> 选项，否则可省略</p><ul><li><code>foreign key</code>： 外键约束，实现关系的参照完整性。 <ul><li>若外键中只包含一个字段，则 <strong>foreign key 约束</strong> 可以放在字段类型定义之后</li><li>若主键包含两个以上的字段，则需要按语法单独列出</li></ul></li></ul><blockquote><p>外键中只包含一个字段:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token identifier"><span class="token punctuation">`</span>字段名<span class="token punctuation">`</span></span> <span class="token identifier"><span class="token punctuation">`</span>数据类型<span class="token punctuation">`</span></span> <span class="token keyword">references</span> 对应主键所在表 <span class="token punctuation">(</span>对应主键字段名<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><blockquote><p>外键中只包含两个以上字段:</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token punctuation">[</span> <span class="token keyword">constraint</span> <span class="token identifier"><span class="token punctuation">`</span>约束名<span class="token punctuation">`</span></span><span class="token punctuation">]</span> <span class="token keyword">foreign</span> <span class="token keyword">key</span> （<span class="token operator">&lt;</span>外键字段名<span class="token operator">&gt;</span>） <span class="token keyword">references</span> <span class="token operator">&lt;</span>对应主键所在表<span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>对应主键字段名<span class="token operator">&gt;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><h3 id="_2-2-修改基本表" tabindex="-1"><a class="header-anchor" href="#_2-2-修改基本表" aria-hidden="true">#</a> 2.2 修改基本表</h3><h3 id="查看表结构" tabindex="-1"><a class="header-anchor" href="#查看表结构" aria-hidden="true">#</a> 查看表结构</h3><p>表创建好后可以使用命令 <code>DESCIBE </code> 命令查看表的结构，语法格式是： <code>DESCRIBE/EXPLAIN 表名</code>，用该命令查看 student 数据库中学生、课程和选课表的结构，命令执行结果</p><p>命令的输出结果包含 field 、 type 、 null 、 key 、default 和 extra 五项，具体每项的含义如下:</p><ul><li>Field ：字段名；</li><li>Type ：字段类型；</li><li>Null ：表示该列是否可以取 null 值；</li><li>key ：表示该列是否已编制索引 <ul><li>P RI 表示该列是主键的一部分，比如图中三个表的主键字段对应的 key 值就是 PRI</li><li>UNI 表示该列是一个唯一索引的第一列（前导列），且不能取 NULL 值，比如课程表的课程号字段上创建了唯一索引，因此该字段对应的 KEY 值是 UNI</li><li>MUL 表示该列是一个非唯一索引的第一列或者是一个唯一索引的组成部分，其值可以重复且可以取 NULL 值，比如学生表的所在班级字段是外键，该字段对应的 KEY 值就是 MUL</li><li>NULL 表示该列没有索引，或者是一个非唯一的复合索引的非前导列，其值可以重复；</li></ul></li><li>default 和 extra ： <ul><li>default 表示该列的默认值；</li><li>extra 表示可以获取的与给定列有关的附加信息，例如</li></ul></li></ul><h3 id="修改表结构" tabindex="-1"><a class="header-anchor" href="#修改表结构" aria-hidden="true">#</a> 修改表结构</h3><p>修改表的结构使用的命令是 <code>ALTER TABLE</code> ，使用该命令可以对表结构进行以下操作</p><ul><li>修改表名</li><li>修改字段名或字段类型</li><li>添加或删除字段、添加或删除约束等。</li></ul><p>注意，该命令只影响表的结构，不影响表中的数据</p><h3 id="修改表名" tabindex="-1"><a class="header-anchor" href="#修改表名" aria-hidden="true">#</a> 修改表名</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>原表名<span class="token operator">&gt;</span> <span class="token keyword">RENAME</span> <span class="token punctuation">[</span><span class="token keyword">TO</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span>新表名<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="修改字段名" tabindex="-1"><a class="header-anchor" href="#修改字段名" aria-hidden="true">#</a> 修改字段名</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> CHANGE <span class="token operator">&lt;</span>原字段名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>新字段名<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>新数据类型<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果只是修改字段名，字段类型不变，也不能省略“新数据类型&quot;，这时将新数据类型设置为和原来一样即可</p><h3 id="修改字段的数据类型" tabindex="-1"><a class="header-anchor" href="#修改字段的数据类型" aria-hidden="true">#</a> 修改字段的数据类型</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token keyword">MODIFY</span> <span class="token operator">&lt;</span>字段名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加字段" tabindex="-1"><a class="header-anchor" href="#添加字段" aria-hidden="true">#</a> 添加字段</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token keyword">ADD</span> <span class="token operator">&lt;</span>字段名<span class="token operator">&gt;</span><span class="token operator">&lt;</span>数据类型<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除字段" tabindex="-1"><a class="header-anchor" href="#删除字段" aria-hidden="true">#</a> 删除字段</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token operator">&lt;</span>表名<span class="token operator">&gt;</span> <span class="token keyword">DROP</span> <span class="token operator">&lt;</span>字段名<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-3-删除基本表" tabindex="-1"><a class="header-anchor" href="#_2-3-删除基本表" aria-hidden="true">#</a> 2.3 删除基本表</h3><p>语法格式： DROP TABLE &lt;表名&gt;</p><div class="hint-container info"><p class="hint-container-title">例 5-12</p><p>将学生表中的选课表删除，然后将选课表删除</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code> <span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>选课<span class="token punctuation">`</span></span>\n <span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>学生<span class="token punctuation">`</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>本例中，因为学生表中 <code>所在班级</code> 字段是外键，引用了选课表中的 <code>班级名称</code> 字段，学生表是子表而选课表是父表，因此必须先删除子表再删除父表。</p></div><h2 id="三、索引的定义和作用" tabindex="-1"><a class="header-anchor" href="#三、索引的定义和作用" aria-hidden="true">#</a> 三、索引的定义和作用</h2><p>数据库查询是数据库的最主要功能之一，我们都希望查询数据的速度尽可能的快，因此数据库系统的设计者会从查询算法的角度进行优化。最基本的查询算法有：</p><ul><li>顺序查找（ LINEARSEARCH)</li><li>二分查找（ BINARY SEARCH ）</li><li>二叉树查找（ BINARY TREE SEARCH ）</li></ul><p>但是每种查找算法都只能应用于特定的数据结构之上，例如：</p><ul><li>二分查找要求被检索数据有序</li><li>二叉树查找只能应用于二叉查找树上</li></ul><p>数据本身的组织结构不可能完全满足各种数据结构（例如，理论上不可能同时将两列都按顺序进行组织）。因此，在数据之外，数据库系统还维护着满足特定查找算法的数据结构一索引，这种数据结构以某种方式引用（指向）数据以实现高级查找算法。</p><p>MYSQL 官方对索引的定义为：索引 (INDEX) 是帮助 MYSQL 高效获取数据的数据结构，通俗地说，索引就是基本表的目录，其作用相当于一本书的目录，可以根据索引项对应的元组地址，快速找到某条特定记录。一个基本表可以根据需要建立多个索引，以提供多种存取路径，加快数据查询速度。</p><h3 id="_3-1-索引的作用及分类" tabindex="-1"><a class="header-anchor" href="#_3-1-索引的作用及分类" aria-hidden="true">#</a> 3.1 索引的作用及分类</h3><h3 id="索引的作用" tabindex="-1"><a class="header-anchor" href="#索引的作用" aria-hidden="true">#</a> 索引的作用</h3><p>索引的目的是为了优化数据库的查询速度，使用索引来检索数据不需要遍历整个数据库，大大提高了系统的性能，索引的作用主要有以下两种：</p><ul><li>索引能明显加快查询速度对于行和列比较多的基本表，如果没有索引，查找数据必须从第一条记录开始，逐条记录进行字段值的比较操作。而且由于数据文件较大，需要将文件分块后逐个读到内存，大大增加了磁盘的 1/0 次数，降低了查询效率。索引文件很小，可以一次读人内存，而且索引文件中是按索引项有序排列的，可以很快找到索引项值和元组地址对于数据量很大的基本表，在查询条件字段、排序字段或分组字段上建立索引，能大大加快查询的速度</li><li>索引能明显加快表之间的连接速度表之间的连接操作，本质上是根据连接字段的值在表中进行查找比如学生和选课两个关系，按学号字段的值是否相等进行等值连接，假设学生表中第一位学生的学号为“ 0 &quot;，则按“学生．学号=选课．学号”的连接条件需要在选课表中查询学号为“佩 0 ”的记录，若选课表中存在学号字段上的索引则能加快查询速度，从而提高连接操作的速度。因此对于数据量很大的基本表，有必要对连接字段建立索引。</li></ul><h3 id="索引的分类" tabindex="-1"><a class="header-anchor" href="#索引的分类" aria-hidden="true">#</a> 索引的分类</h3><ul><li>普通索引最基本的索引类型，对字段值是否唯一或是否非空没有限制，比如要根据性别查找学生信息，可在学生表中性别字段上建立普通索引。</li><li>唯一索引（ UNIQUE 索引）不允许重复的索引值，要求建立索引的字段不允许有重复值，比如要根据身份证号查找学生信息，可在学生表中身份证号字段上建立唯一索引。另外，当表中某个字段建立了唯一性约束时， MySQL 会自动创建一个唯一性索引，如果此时表中已有数据， MySQL 会检查表中已有数据在该字段上是否有重复值，若有则索引创建失败。</li><li>主键索引（ PRI MARY KEY 索引）在创建主键约束时，系统自动创建了一个唯一性的聚簇索引，聚簇索引决定表中数据的物理顺序，因此一个表只能有一个聚簇索引，而且在 MySQL 中不允许用户自己建聚簇索引，只能通过创建主键的方式间接地为表建立聚簇索引。</li><li>复合索引当查询条件涉及到多个字段，或需要按多个字段的值进行排序或分组操作时，可以在表的多个字段上建立一个索引，这个索引指向创建时对应的多个字段，可以通过这几个字段进行查询，但是，只有查词条件中使用了这些字段中的第一个字段时，索引才会被使用</li></ul><p>复合索引如果也是唯一索引，则要求索引中包含的所有字段的组合值在表中是唯一的。</p><h3 id="_3-2-索引的创建" tabindex="-1"><a class="header-anchor" href="#_3-2-索引的创建" aria-hidden="true">#</a> 3.2 索引的创建</h3><p>创建索引的方法主要有两种：</p><ul><li>建表的同时创建索引</li><li>在已经建好的表上创建索引</li></ul><h3 id="建表的同时创建索引" tabindex="-1"><a class="header-anchor" href="#建表的同时创建索引" aria-hidden="true">#</a> 建表的同时创建索引</h3><p>在创建基本表的语句基础上，在所有字段定义完后，再添加定义索引的语句。</p><ul><li>单列普通/唯一索引</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token punctuation">]</span> <span class="token keyword">INDEX</span> <span class="token punctuation">[</span><span class="token identifier"><span class="token punctuation">`</span>索引名<span class="token punctuation">`</span></span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>属性名<span class="token punctuation">`</span></span><span class="token punctuation">[</span><span class="token punctuation">(</span>长度<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>说明：<strong><code>长度</code> 参数指定索引长度，<code>ASC</code> 指按索引项升序排列， <code>DESC</code>指按索引项降序排列</strong></p><p>如果是唯一索引，在 <code>INDEX</code>前面加上 <code>UNIQUE</code> 选项；</p><p>功能：<strong>在该属性上建立一个指定长度的普通／唯一索引。</strong></p><ul><li>多列普通/唯一索引</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token punctuation">[</span><span class="token keyword">UNIQUE</span><span class="token punctuation">]</span> <span class="token keyword">INDEX</span> <span class="token punctuation">[</span><span class="token identifier"><span class="token punctuation">`</span>索引名<span class="token punctuation">`</span></span><span class="token punctuation">]</span>\n<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>属性名 1<span class="token punctuation">`</span></span> <span class="token punctuation">[</span><span class="token punctuation">(</span>长度<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>属性名 2<span class="token punctuation">`</span></span> <span class="token punctuation">[</span><span class="token punctuation">(</span>长度<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n···\n<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>属性名 n<span class="token punctuation">`</span></span> <span class="token punctuation">[</span><span class="token punctuation">(</span>长度<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>功能：<strong>在 <code>属性 1 到属性 n </code> 这 n 列上建立一个普通/唯一复合索引。</strong></p><h3 id="在已经建好的表上创建索引" tabindex="-1"><a class="header-anchor" href="#在已经建好的表上创建索引" aria-hidden="true">#</a> 在已经建好的表上创建索引</h3><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> <span class="token identifier"><span class="token punctuation">`</span>索引名<span class="token punctuation">`</span></span> <span class="token keyword">ON</span> <span class="token identifier"><span class="token punctuation">`</span>表名<span class="token punctuation">`</span></span><span class="token punctuation">(</span>属性名 <span class="token punctuation">[</span><span class="token punctuation">(</span>长度<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-3-索引的查看" tabindex="-1"><a class="header-anchor" href="#_3-3-索引的查看" aria-hidden="true">#</a> 3.3 索引的查看</h3><p>查询操作有没有使用索引或者使用的哪个索引</p><ol><li>可以在查询语句前面加上 <code>EXPLAIN </code> 命令</li><li>当一个表中有多个索引时，可以在一个查询语句的 <code>WHERE</code> 子句前加上 <code>FORCE INDEX (索引名)</code> 选项，以指定哪个索引在本次查询操作中起作用</li></ol><p>下面几个例题中的查询操作是用 select 语句实现的，关于 select 语句的详细内容将在第 6章中讲解。</p><h3 id="_3-4-为表创建索引的原则" tabindex="-1"><a class="header-anchor" href="#_3-4-为表创建索引的原则" aria-hidden="true">#</a> 3.4 为表创建索引的原则</h3><p>建立索引是加快数据查询的有效手段，但过多的索引也会带来一些问题。</p><ul><li>首先，索引是完全独立于基础数据之外的一部分数据，因此在对表进行 INSERT 、 UPDATE 和 DELETE 操作时， MySQL 不仅要更新表中的数据，还必须要更新表中所有索引的数据</li><li>其次，当表中数据量增加时，索引文件也会变大而占用更多的存储空间。</li></ul><p>这都将大大增加系统的开销，降低系统的效率。因此我们在建立索引时应遵循以下原则:</p><ol><li>经常所为查询条件的字段、经常作为排序或分组的字段以及表之间连接的关联字段，可以根据具体情况建立合适的索引</li><li>更新非常频繁的字段不适合建索引，这里的“频繁&quot;的衡量标准是更新操作的频率相对于查询操作频率的一个比值，比值越大表示更新操作越频繁</li><li>表中记录较少，则不必建索引，这里的“较少”也是相对的，一般一两千条记录甚至几百条记录的表，没必要建索引，直接遍历全表即可</li><li>选择性较低的字段不适合建索引，这里的“选择性&quot;是指索引列中不同值的数目与表中记录的比值，一个索引的选择性越接近于 1 ，该索引的效率就越高假如学生表中有 1000条记录，其中籍贯列的值有 100 个不同的值，而性别列只有 2 个不同的值，如果在籍贯和性别字段上都建立索引，那么这两个索引的选择性分别是 0.1 和 0.2 ，因此在籍贯列上建索引的必要性远大于性别列。</li><li>应定期对数据库中各表的索引进行维护，当表中数据大量更新或者数据的使用方式发生改变后，原有的一些索引可能不再需要，这时应定期找出这些索引并删除它们以减少系统开销</li></ol>',97);function h(g,v){const n=p("RouterLink");return t(),o("div",null,[s("blockquote",null,[d,s("ul",null,[u,s("li",null,[a("关于视图、触发器等对象的创建及使用涉及到 SQL 的数据操纵功能，在 "),l(n,{to:"/book/mysql07.html"},{default:c(()=>[a("MySQL 视图和触发器的使用")]),_:1}),a(" 中有相关介绍。")])])]),k])}const E=e(r,[["render",h],["__file","mysql05.html.vue"]]);export{E as default};
